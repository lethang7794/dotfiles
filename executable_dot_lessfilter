#!/usr/bin/env bash

has_cmd() {
  for opt in "$@"; do
    if command -v "$opt" >/dev/null; then
      continue
    else
      return "$?"
    fi
  done
}

mime=$(file -bLs --mime-type "$1")
category=${mime%%/*}
kind=${mime##*/}

ext=""
if [[ "$1" == *"."* ]]; then
  ext=${1##*.}
fi

if [ "$kind" = json ]; then
  if has_cmd jupyter bat && [ "$ext" = ipynb ]; then
    jupyter nbconvert --to python --stdout "$1" | bat --color=always -plpython
  elif has_cmd jq; then
    jq -Cr . "$1"
  fi
elif [ -d "$1" ]; then
  # tree -C -L 1 $1
  # eza --git -h --color=always --icons "$1" --tree --level=1
  if has_cmd eza; then
    eza -h --git --color=always --icons "$1" --tree --level=1
  elif has_cmd exa; then
    exa -hl --color=always --icons "$1"
  fi
elif [[ "$kind" == "zip" ]]; then
  7z l "$1" | tail -n +15
elif [[ "$kind" == *"epub"* ]] || [[ "$kind" = "zip" ]]; then
  pandoc "$1"
elif [ "$kind" = pdf ]; then
  # clear -x
  # sleep 0.3
  echo "$1"
  # timg --frames=1 -pk -bauto -C -g"${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))" "$1"
  if has_cmd pdftotext sed; then
    pdftotext -q "$1" - | sed "s/\f/$(hr â”€)\n/g"
  fi
elif [ "$category" = image ]; then
  # sleep 0.7
  echo "$1"
  # yes '' | sed "$((FZF_PREVIEW_LINES - 1))q"
  # kitten icat --clear --transfer-mode=stream --unicode-placeholder --stdin=no --place="${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))@0x0" "$1"
  # kitten icat --clear --transfer-mode=stream --unicode-placeholder --align=center --stdin=no --place="${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))@20x1" "$1"
  kitten icat --clear --transfer-mode=stream --unicode-placeholder --align=center --stdin=no --place="${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))@0x0" "$1"
  # imgcat "$1"
  # timg --clear=every -C -pk -g"${FZF_PREVIEW_COLUMNS}x$((FZF_PREVIEW_LINES - 1))" "$1"

  printf "%s" "$(hr -)"
  mediainfo "$1" | bat --color=always -plyaml
  printf "%s\n\n" "$(hr -)"
  exiftool "$1" | bat --color=always -plyaml
# elif [ "$category" = image ]; then
#   if has_cmd chafa; then
#     chafa -f symbols "$1"
#   fi
#   if has_cmd exiftool; then
#     exiftool "$1" | bat --color=always -plyaml
#   fi
elif [[ "$category" = video ]] || [[ "$category" = audio ]]; then
  if has_cmd mediainfo; then
    mediainfo "$1" | bat --color=always -plyaml
  fi
elif [[ "$kind" == *"vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]] ||
  [[ "$kind" == *"vnd.ms-excel" ]]; then
  in2csv "$1" | xsv table | bat -ltsv --color=always
# elif [ "$kind" = octet-stream ]; then
#   hexyl "$1"
# elif [ "$kind" = x-executable ]; then
#   echo "$1"
#   hexyl "$1"
elif [ "$ext" = md ]; then
  # paper --margin=4 --v-margin=1 "$1"
  # glow "$1"
  mdless "$1"

# Learn X in Y minutes's files
elif [[ $1 =~ .html.markdown ]]; then
  paper --margin=4 --v-margin=1 "$1"

elif [ "$category" = text ]; then
  bat --color=always --style=header "$1"
else
  if [[ -n "$1" ]]; then
    echo "Path:       $1"
    # echo "Ext:        $ext"
    echo "Mime:       $mime"
    # echo "- Category: $category"
    # echo "- Kind:     $kind"
    hr -
    file "$1"
  fi
  # hr
  # exit 1
fi
